<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://oss.oracle.com/licenses/CDDL+GPL-1.1
    or LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

      xmlns:h="http://java.sun.com/jsf/html"
	  xmlns:f="http://java.sun.com/jsf/core"
	  xmlns:ui="http://java.sun.com/jsf/facelets"
          xmlns:simpleEvents="http://jsf-extensions.dev.java.net/samples"
	  xmlns:d="http://java.sun.com/jsf/facelets/demo">
<ui:composition template="_template.xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<ui:define name="head">
<title>Component Method Invocation Example </title>
</ui:define>

<script type="text/javascript" src="/Users/edburns/Projects/J2EE/workareas/jsf-extensions-branch/run-time/avatar/src/main/resources/prototype.js"></script>
<script type="text/javascript" src="/Users/edburns/Projects/J2EE/workareas/jsf-extensions-branch/run-time/avatar/src/main/resources/effects.js"></script>
<script type="text/javascript" src="/Users/edburns/Projects/J2EE/workareas/jsf-extensions-branch/run-time/avatar/src/main/resources/dragdrop.js"></script>
<script type="text/javascript" src="/Users/edburns/Projects/J2EE/workareas/jsf-extensions-branch/run-time/avatar/src/main/resources/controls.js"></script>
<script type="text/javascript" src="/Users/edburns/Projects/J2EE/workareas/jsf-extensions-branch/run-time/avatar/src/main/resources/com_sun_faces_ajax.js"></script>
<script type="text/javascript" src="/Users/edburns/Projects/J2EE/workareas/jsf-extensions-branch/run-time/avatar/src/main/resources/com_sun_faces_ajax_zone.jsx"></script>

</head>

<body>

<ui:define name="pageTitle">Component Method Invocation Example</ui:define>

<ui:define name="topPanel">

<p>This example demonstrates the use of context sensitive
component/renderer method invocation via AJAX.  It includes a new
renderer, <code>SpecialOutputTextRenderer</code> (see source in side
panel).  This renderer decorates the standard HTML_BASIC text renderer
and renders text in <i><blink><font color="red">italicized, blinking,
red text</font></blink></i>.  It also exposes a method,
<code>addToRequestScope</code>, that is invoked via ajax using the
"methodName" invocation feature when the <code>Commence a 'methodName'
Ajax transaction</code> button is pressed.  Of course, a new Facelets
tag is introduced to establish the component/renderer pairing, please
see <code>simple_events.taglib.xml</code> in the side panel.</p>

<p><a href="home.jsf">Back to demo homepage.</a></p>

</ui:define>


<ui:define name="mainColumn">
<h:form id="form" prependId="false">  

<table bgcolor="#eeeeee" border="0" cellpadding="2" cellspacing="0" width="100%" class="vtop">
<colgroup>
  <col width="45%" />
  <col width="55%" />
</colgroup>

<tr>

<td colspan="3" class="headerbar3">
  <div class="headerpadding2">
    <span style="color:#fff;">Component Method Invocation Example</span>
  </div>
</td>

</tr>

<tr>

<td>Special Renderer Output:
</td>

<td>

<p><simpleEvents:outputText id="output" 
                            value="#{requestScope.addedFromRenderer}" /></p>
</td>

</tr>

<tr>

<td>

<p><h:commandButton id="doMethodNameTransaction" 
          value="Commence a 'methodName' Ajax transaction" 
          onclick="DynaFaces.fireAjaxTransaction($('output'), 
                      { render: 'output',
                        methodName: 'addToRequestScope', 
                        phaseId: DynaFaces.PhaseId.UPDATE_MODEL_VALUES }); return false;" /></p>

</td>

<td>

<p><h:commandButton id="normalSubmit" value="non-AJAX submit" /></p>

</td>

</tr>

</table>

</h:form>

</ui:define>

<ui:define name="bottomPanel">

	<ol>

	  <li><p>Press the <code>Commence a 'methodName' Ajax
	  transaction</code> button.  This will invoke a method on the
	  <code>simpleEvents:outputText</code> component, which will be
	  delegated through to the custom renderer.  The method adds a
	  value to request scope.</p></li>

	  <li><p>Observe the message in the <code>Special Renderer
	  Output</code> row of the table.  This comes from the
	  <code>simpleEvents:outputText</code> outputting the expression
	  <code>&#35; {requestScope.addedFromRenderer}</code>. </p></li>

	  <li><p>Press the <code>non-AJAX submit</code> button.  This
	  will cause the blinking message to go away, since the message
	  was stored in request scope and we have initiated a new
	  request. </p></li>

	</ol>

</ui:define>


<ui:define name="rightColumn">

<div class="navtitle">Example Files</div>

<div class="bluearrows"><a href="ShowSource.jsp?filename=/methodName.xhtml">methodName.xhtml</a></div>
<div class="bluearrows"><a href="ShowSource.jsp?filename=/com/sun/faces/simple_event/SpecialOutputTextRenderer.java">SpecialOutput<br />TextRenderer.java</a></div>

<div class="bluearrows"><a href="ShowSource.jsp?filename=/_template.xhtml">_template.xhtml</a></div>
<div class="bluearrows"><a href="ShowSource.jsp?filename=/WEB-INF/web.xml">WEB-INF/web.xml</a></div>
<div class="bluearrows"><a href="ShowSource.jsp?filename=/WEB-INF/faces-config.xml">WEB-INF/faces-config.xml</a></div>
<div class="bluearrows"><a href="ShowSource.jsp?filename=/WEB-INF/classes/META-INF/simple_events.taglib.xml">simple_events.taglib.xml</a></div>

</ui:define>

</body>
</ui:composition>
</html>
